#+AUTHOR:   Edgar Aroutiounian
#+EMAIL:    edgar.factorial@gmail.com
#+LANGUAGE: en
#+STARTUP: indent
#+LATEX_HEADER: \usepackage{lmodern}
#+LATEX_HEADER: \usepackage[T1]{fontenc}
#+OPTIONS:  toc:nil num:0

*A Makefile plugin designed to help you get over the hump of OCaml
tooling, building.*

* Hump
This is a crazy idea inspired by frustrations of the current status
quo of building OCaml. With hump, you only need two files to get an
OCaml project up and running: a ~package.json~ file and a
~Makefile~. Hump provides additional builtin functions to ~make~ that
are specific for modern OCaml tooling and take into account tools like
~merlin~ and ~opam~.

** Implementation detail

It is implemented as a C++ ~gnumake~ [[https://www.gnu.org/software/make/manual/html_node/Loading-Objects.html#Loading-Objects][dynamic
object]] and distributed via ~opam~, the ~include~ you do references
just one ~Makefile~ on your system.

* Example
Say your ~package.json~ looks like this:

#+BEGIN_SRC javascript
{
    "name" : "example_project",
    "version":"0.1.0",
    "description":"Something to show off hump",
    "keywords":["build", "systems"],
    "author":{
	"name":"Edgar Aroutiounian",
	"email":"edgar.factorial@gmail.com"
    },
    "dependencies":{
	"cmdliner":"*",
	"lwt":"*"
    },
    "license":"GPL-3"
}
#+END_SRC

then your ~Makefile~ just needs to look like this:

#+BEGIN_SRC makefile
include hump
#+END_SRC

and then from the command line you can do:

#+BEGIN_SRC shell
$ make generate
#+END_SRC

Yes. That's literally all it takes to generate the a ~.merlin~ and
~opam~ file.

* Prerequisites
You need to have new version of gnu-make, like 4.1. It needs to
support loadable objects. To install ~hump~, you can do:

#+BEGIN_SRC shell
$ git clone https://github.com/fxfactorial/hump
$ cd hump
$ opam pin add hump . -y
#+END_SRC

And that's it, now ~hump~ will be a valid include for your Makefiles.

* Issues
Right now I am only testing this on OS X, later I will have it working
on Linux. 
